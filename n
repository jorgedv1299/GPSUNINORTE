<!DOCTYPE html>
<html lang="es"> 
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Monitoreo de Ubicaciones</title>
    <link rel="stylesheet" href="styles.css"> <!-- Asegúrate de incluir tu archivo CSS -->
    <style>
        /* Estilos adicionales para la visualización */
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            margin: 0;
            padding: 0;
        }
        .navbar {
            background-color: #333;
            color: #fff;
            padding: 15px;
            text-align: center;
        }
        .navbar a {
            color: white;
            padding: 14px 20px;
            text-decoration: none;
        }
        .navbar a:hover {
            background-color: #ddd;
            color: black;
        }
        .container {
            display: none;
            padding: 20px;
            background-color: #fff;
            margin: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        #mapRealTime, #mapRoute, #mapLocation {
            width: 100%;
            height: 400px;
            margin: 20px 0;
        }
    </style>
</head>
<body>

    <div class="navbar">
        <a id="nav-realtime" href="#">Ubicación en Tiempo Real</a>
        <a id="nav-search" href="#">Buscar Recorrido</a>
        <a id="nav-search-location" href="#">Buscar Ubicación</a>
    </div>

    <!-- Sección de ubicación en tiempo real -->
    <div id="realtime-section" class="container">
        <h2>Ubicación en Tiempo Real</h2>
        <div id="latitud">Latitud: -</div>
        <div id="longitud">Longitud: -</div>
        <div id="timestamp">Fecha y Hora: -</div>
        <div id="mapRealTime"></div>
    </div>

    <!-- Sección para buscar recorrido entre dos fechas -->
    <div id="search-section" class="container">
        <h2>Buscar Recorrido</h2>
        <label for="start-date">Fecha Inicio:</label>
        <input type="datetime-local" id="start-date">
        <label for="end-date">Fecha Fin:</label>
        <input type="datetime-local" id="end-date">
        <button id="show-route">Mostrar Recorrido</button>
        <div id="mapRoute"></div>
    </div>

    <!-- Nueva sección para buscar ubicaciones -->
    <div id="location-section" class="container" style="display:none;">
        <h2>Buscar Ubicación</h2>
        <input id="autocomplete" type="text" placeholder="Buscar ubicación..." />
        <button id="search-location">Buscar</button>
        <div id="search-result"></div>
        <div id="mapLocation"></div>
    </div>

    <div id="location-count" style="display:none;">
        <h3>Conteo de Pasadas por Ubicación</h3>
        <p id="visit-count"></p>
    </div>

    <script>
        let markerRealTime;
        let realTimePath = [];
        let realTimePolyline;
        let routePolyline;
        let mapRealTime, mapRoute, mapLocation;

        // Inicializar el mapa de tiempo real
        function initMapRealTime() {
            mapRealTime = new google.maps.Map(document.getElementById('mapRealTime'), {
                center: { lat: 0, lng: 0 },
                zoom: 15
            });
            markerRealTime = new google.maps.Marker({
                position: { lat: 0, lng: 0 },
                map: mapRealTime
            });
            realTimePolyline = new google.maps.Polyline({
                path: [],
                geodesic: true,
                strokeColor: "#FF0000",
                strokeOpacity: 1.0,
                strokeWeight: 2
            });
            realTimePolyline.setMap(mapRealTime);
        }

        // Inicializar el mapa para el recorrido
        function initMapRoute() {
            mapRoute = new google.maps.Map(document.getElementById('mapRoute'), {
                center: { lat: 0, lng: 0 },
                zoom: 15
            });
        }

        // Inicializar el mapa para la ubicación
        function initMapLocation() {
            mapLocation = new google.maps.Map(document.getElementById('mapLocation'), {
                center: { lat: 0, lng: 0 },
                zoom: 15
            });
        }

        // Actualizar la ubicación en tiempo real
        function updateCurrentLocation(lat, lng, timestamp) {
            const position = { lat: lat, lng: lng };
            markerRealTime.setPosition(position);
            realTimePath.push(position);
            realTimePolyline.setPath(realTimePath);
            mapRealTime.setCenter(position);
            document.getElementById('latitud').innerText = `Latitud: ${lat}`;
            document.getElementById('longitud').innerText = `Longitud: ${lng}`;
            document.getElementById('timestamp').innerText = `Fecha y Hora: ${new Date(timestamp).toLocaleString('es-CO')}`;
        }

        // Mostrar el recorrido entre dos fechas
        function fetchRoute(startDate, endDate) {
            const url = `get_route.php?start=${startDate}&end=${endDate}`;
            fetch(url)
                .then(response => response.json())
                .then(data => {
                    if (data.length > 0) {
                        let path = [];
                        data.forEach(point => {
                            const position = { lat: parseFloat(point.latitud), lng: parseFloat(point.longitud) };
                            path.push(position);
                        });
                        if (routePolyline) {
                            routePolyline.setMap(null);  // Limpiar ruta anterior
                        }
                        routePolyline = new google.maps.Polyline({
                            path: path,
                            geodesic: true,
                            strokeColor: "#FF0000",
                            strokeOpacity: 1.0,
                            strokeWeight: 2
                        });
                        routePolyline.setMap(mapRoute);
                        if (path.length > 0) {
                            mapRoute.setCenter(path[0]);
                        }
                    } else {
                        alert('No se encontraron datos en el rango de fechas seleccionado.');
                    }
                })
                .catch(error => {
                    console.error('Error al obtener el recorrido:', error);
                    alert('Error al obtener el recorrido, revisa la consola para más detalles.');
                });
        }

        document.getElementById('show-route').addEventListener('click', () => {
            const startDate = document.getElementById('start-date').value;
            const endDate = document.getElementById('end-date').value;
            if (startDate && endDate) {
                fetchRoute(startDate, endDate);
            } else {
                alert('Por favor selecciona ambas fechas.');
            }
        });

        // Obtener la ubicación actual y actualizar el mapa de tiempo real
        function getCurrentLocation() {
            fetch('get_location.php')
                .then(response => response.json())
                .then(data => {
                    const { latitud, longitud, timestamp } = data;
                    updateCurrentLocation(parseFloat(latitud), parseFloat(longitud), timestamp);
                })
                .catch(error => {
                    console.error('Error al obtener la ubicación actual:', error);
                });
        }

        setInterval(getCurrentLocation, 10000); // Actualizar cada 10 segundos

        // Mostrar la sección correspondiente y ocultar las demás
        function showSection(sectionId) {
            const sections = document.querySelectorAll('.container');
            sections.forEach(section => {
                section.style.display = 'none';
            });
            document.getElementById(sectionId).style.display = 'block';

            // Inicializar el mapa correspondiente
            if (sectionId === 'realtime-section') {
                initMapRealTime();
            } else if (sectionId === 'search-section') {
                initMapRoute();
            } else if (sectionId === 'location-section') {
                initMapLocation();
            }
        }

        // Manejo del navbar para cambiar entre secciones
        document.getElementById('nav-realtime').addEventListener('click', () => {
            showSection('realtime-section');
        });

        document.getElementById('nav-search').addEventListener('click', () => {
            showSection('search-section');
        });

        document.getElementById('nav-search-location').addEventListener('click', () => {
            showSection('location-section');
        });

        // Inicializar el Autocomplete
        function initAutocomplete() {
            const input = document.getElementById('autocomplete');
            const autocomplete = new google.maps.places.Autocomplete(input);
            autocomplete.addListener('place_changed', () => {
                const place = autocomplete.getPlace();
                if (place.geometry) {
                    const position = { lat: place.geometry.location.lat(), lng: place.geometry.location.lng() };
                    mapLocation.setCenter(position);
                    const lat = place.geometry.location.lat();
                    const lng = place.geometry.location.lng();
                    // Aquí puedes llamar a la función para contar las visitas
                    fetchVisitCount(lat, lng); // Cambié esta línea
                } else {
                    alert('No se encontró información sobre la ubicación seleccionada.');
                }
            });
        }

        // Consultar cuántas veces se pasó por la ubicación
        function fetchVisitCount(lat, lng) {
            const url = `get_visits.php?lat=${lat}&lng=${lng}`;
            fetch(url)
                .then(response => response.json())
                .then(data => {
                    const resultDiv = document.getElementById('search-result');
                    resultDiv.innerHTML = `<h3>Datos de Visitas para: ${lat}, ${lng}</h3>`;
                    if (data.length > 0) {
                        const visitCount = data.length; // Cantidad de visitas
                        document.getElementById('visit-count').innerText = `Número de visitas en el rango de 20 metros: ${visitCount}`;
                    } else {
                        document.getElementById('visit-count').innerText = `Número de visitas en el rango de 20 metros: 0`;
                    }
                    data.forEach(visit => {
                        resultDiv.innerHTML += `<p>${new Date(visit.timestamp).toLocaleString('es-CO')} - ${visit.comment}</p>`;
                    });
                    document.getElementById('location-count').style.display = 'block'; // Mostrar el conteo
                })
                .catch(error => {
                    console.error('Error al obtener los datos de visitas:', error);
                });
        }

        // Iniciar la sección de ubicación en tiempo real al cargar la página
        window.onload = () => {
            showSection('realtime-section');
            initAutocomplete(); // Inicializar Autocomplete
        };
    </script>

    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAjXW8vBhlpVflxXu1wZaBKYJ3xxeDbOOA&libraries=places&callback=initMapRealTime"></script>
</body>
</html>
